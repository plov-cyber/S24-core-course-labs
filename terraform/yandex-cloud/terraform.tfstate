{
  "version": 4,
  "terraform_version": "1.7.4",
  "serial": 36,
  "lineage": "4136495a-780b-904c-271c-d3420e6562bd",
  "outputs": {
    "address": {
      "value": "158.160.126.166",
      "type": "string"
    },
    "name": {
      "value": "devops",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "a2ed0dd5d181bc28a4cf2d6960e60e1e9be7eaa33d86370610acf84502f49f55",
            "rendered": "#ps1\n# ^^^ 'ps1' is only for cloudbase-init, some sort of sha-bang in linux\n\n# logging\nStart-Transcript -Path \"$ENV:SystemDrive\\provision.txt\" -IncludeInvocationHeader -Force\n\"Bootstrap script started\" | Write-Host\n\n# inserting value's from terraform\n$MyUserName = \"rekhlov\"\n$MyPlainTextPassword = \"12345678\"\nif (-not [string]::IsNullOrEmpty($MyUserName) -and -not [string]::IsNullOrEmpty($MyPlainTextPassword)) {\n    \"Create user\" | Write-Host\n    $MyPassword = $MyPlainTextPassword | ConvertTo-SecureString -AsPlainText -Force\n    $MyUser = New-LocalUser -Name $MyUserName -Password $MyPassword -PasswordNeverExpires -AccountNeverExpires\n    $MyUser | Add-LocalGroupMember -Group 'Administrators'\n    $MyUser | Add-LocalGroupMember -Group 'Remote Management Users'\n}\n\n# inserting value's from terraform\n$MyAdministratorPlainTextPassword = \"87654321\"\nif (-not [string]::IsNullOrEmpty($MyAdministratorPlainTextPassword)) {\n    \"Set local administrator password\" | Write-Host\n    $MyAdministratorPassword = $MyAdministratorPlainTextPassword | ConvertTo-SecureString -AsPlainText -Force\n    # S-1-5-21domain-500 is a well-known SID for Administrator\n    # https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/security-identifiers-in-windows\n    $MyAdministrator = Get-LocalUser | Where-Object -Property \"SID\" -like \"S-1-5-21-*-500\"\n    $MyAdministrator | Set-LocalUser -Password $MyAdministratorPassword\n}\n\n\"Bootstrap script ended\" | Write-Host",
            "template": "#ps1\n# ^^^ 'ps1' is only for cloudbase-init, some sort of sha-bang in linux\n\n# logging\nStart-Transcript -Path \"$ENV:SystemDrive\\provision.txt\" -IncludeInvocationHeader -Force\n\"Bootstrap script started\" | Write-Host\n\n# inserting value's from terraform\n$MyUserName = \"${ user_name }\"\n$MyPlainTextPassword = \"${ user_pass }\"\nif (-not [string]::IsNullOrEmpty($MyUserName) -and -not [string]::IsNullOrEmpty($MyPlainTextPassword)) {\n    \"Create user\" | Write-Host\n    $MyPassword = $MyPlainTextPassword | ConvertTo-SecureString -AsPlainText -Force\n    $MyUser = New-LocalUser -Name $MyUserName -Password $MyPassword -PasswordNeverExpires -AccountNeverExpires\n    $MyUser | Add-LocalGroupMember -Group 'Administrators'\n    $MyUser | Add-LocalGroupMember -Group 'Remote Management Users'\n}\n\n# inserting value's from terraform\n$MyAdministratorPlainTextPassword = \"${ admin_pass }\"\nif (-not [string]::IsNullOrEmpty($MyAdministratorPlainTextPassword)) {\n    \"Set local administrator password\" | Write-Host\n    $MyAdministratorPassword = $MyAdministratorPlainTextPassword | ConvertTo-SecureString -AsPlainText -Force\n    # S-1-5-21domain-500 is a well-known SID for Administrator\n    # https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/security-identifiers-in-windows\n    $MyAdministrator = Get-LocalUser | Where-Object -Property \"SID\" -like \"S-1-5-21-*-500\"\n    $MyAdministrator | Set-LocalUser -Password $MyAdministratorPassword\n}\n\n\"Bootstrap script ended\" | Write-Host",
            "vars": {
              "admin_pass": "87654321",
              "user_name": "rekhlov",
              "user_pass": "12345678"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "yandex_compute_image",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2024-02-26T10:55:21Z",
            "description": "centos 7",
            "family": "centos-7",
            "folder_id": "standard-images",
            "id": "fd8p3qkkviv008rkeb83",
            "image_id": "fd8p3qkkviv008rkeb83",
            "labels": {},
            "min_disk_size": 10,
            "name": "centos-7-v20240226",
            "os_type": "linux",
            "pooled": true,
            "product_ids": [
              "f2eo8hihti6h5tcvv773"
            ],
            "size": 2,
            "status": "ready"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_disk",
      "name": "boot-disk",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_recreate": null,
            "block_size": 4096,
            "created_at": "2024-02-28T07:15:18Z",
            "description": "",
            "disk_placement_policy": [
              {
                "disk_placement_group_id": ""
              }
            ],
            "folder_id": "b1g1cvrjre5nhj5nuthg",
            "id": "fhmqalb0uvrkq4j81fq2",
            "image_id": "fd8p3qkkviv008rkeb83",
            "labels": null,
            "name": "boot-disk",
            "product_ids": [
              "f2eo8hihti6h5tcvv773"
            ],
            "size": 50,
            "snapshot_id": "",
            "status": "ready",
            "timeouts": null,
            "type": "network-ssd",
            "zone": "ru-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.yandex_compute_image.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_compute_instance",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow_recreate": null,
            "allow_stopping_for_update": null,
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "fhmqalb0uvrkq4j81fq2",
                "disk_id": "fhmqalb0uvrkq4j81fq2",
                "initialize_params": [
                  {
                    "block_size": 4096,
                    "description": "",
                    "image_id": "fd8p3qkkviv008rkeb83",
                    "name": "boot-disk",
                    "size": 50,
                    "snapshot_id": "",
                    "type": "network-ssd"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "created_at": "2024-02-28T07:15:26Z",
            "description": "",
            "filesystem": [],
            "folder_id": "b1g1cvrjre5nhj5nuthg",
            "fqdn": "devops.ru-central1.internal",
            "gpu_cluster_id": "",
            "hostname": "devops",
            "id": "fhmo5a7vik2kifc70ei6",
            "labels": null,
            "local_disk": [],
            "maintenance_grace_period": "",
            "maintenance_policy": null,
            "metadata": {
              "user-data": "#ps1\n# ^^^ 'ps1' is only for cloudbase-init, some sort of sha-bang in linux\n\n# logging\nStart-Transcript -Path \"$ENV:SystemDrive\\provision.txt\" -IncludeInvocationHeader -Force\n\"Bootstrap script started\" | Write-Host\n\n# inserting value's from terraform\n$MyUserName = \"rekhlov\"\n$MyPlainTextPassword = \"12345678\"\nif (-not [string]::IsNullOrEmpty($MyUserName) -and -not [string]::IsNullOrEmpty($MyPlainTextPassword)) {\n    \"Create user\" | Write-Host\n    $MyPassword = $MyPlainTextPassword | ConvertTo-SecureString -AsPlainText -Force\n    $MyUser = New-LocalUser -Name $MyUserName -Password $MyPassword -PasswordNeverExpires -AccountNeverExpires\n    $MyUser | Add-LocalGroupMember -Group 'Administrators'\n    $MyUser | Add-LocalGroupMember -Group 'Remote Management Users'\n}\n\n# inserting value's from terraform\n$MyAdministratorPlainTextPassword = \"87654321\"\nif (-not [string]::IsNullOrEmpty($MyAdministratorPlainTextPassword)) {\n    \"Set local administrator password\" | Write-Host\n    $MyAdministratorPassword = $MyAdministratorPlainTextPassword | ConvertTo-SecureString -AsPlainText -Force\n    # S-1-5-21domain-500 is a well-known SID for Administrator\n    # https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/security-identifiers-in-windows\n    $MyAdministrator = Get-LocalUser | Where-Object -Property \"SID\" -like \"S-1-5-21-*-500\"\n    $MyAdministrator | Set-LocalUser -Password $MyAdministratorPassword\n}\n\n\"Bootstrap script ended\" | Write-Host"
            },
            "metadata_options": [
              {
                "aws_v1_http_endpoint": 1,
                "aws_v1_http_token": 2,
                "gce_http_endpoint": 1,
                "gce_http_token": 1
              }
            ],
            "name": "devops",
            "network_acceleration_type": "standard",
            "network_interface": [
              {
                "dns_record": [],
                "index": 0,
                "ip_address": "192.168.10.11",
                "ipv4": true,
                "ipv6": false,
                "ipv6_address": "",
                "ipv6_dns_record": [],
                "mac_address": "d0:0d:18:2a:8f:f9",
                "nat": true,
                "nat_dns_record": [],
                "nat_ip_address": "158.160.126.166",
                "nat_ip_version": "IPV4",
                "security_group_ids": [],
                "subnet_id": "e9bvoca4a6g67pmhpafm"
              }
            ],
            "placement_policy": [
              {
                "host_affinity_rules": [],
                "placement_group_id": "",
                "placement_group_partition": 0
              }
            ],
            "platform_id": "standard-v1",
            "resources": [
              {
                "core_fraction": 100,
                "cores": 2,
                "gpus": 0,
                "memory": 4
              }
            ],
            "scheduling_policy": [
              {
                "preemptible": false
              }
            ],
            "secondary_disk": [],
            "service_account_id": "",
            "status": "running",
            "timeouts": {
              "create": "10m",
              "delete": "10m",
              "update": null
            },
            "zone": "ru-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.template_file.default",
            "data.yandex_compute_image.default",
            "yandex_compute_disk.boot-disk",
            "yandex_vpc_network.default",
            "yandex_vpc_subnet.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_vpc_network",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2024-02-28T07:15:17Z",
            "default_security_group_id": "enp6puh0d753amnvn6p4",
            "description": "",
            "folder_id": "b1g1cvrjre5nhj5nuthg",
            "id": "enp3jtcv93bce8tr5erb",
            "labels": {},
            "name": "ya-network",
            "subnet_ids": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMCwiZGVsZXRlIjo2MDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "yandex_vpc_subnet",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/yandex-cloud/yandex\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_at": "2024-02-28T07:15:20Z",
            "description": "",
            "dhcp_options": [],
            "folder_id": "b1g1cvrjre5nhj5nuthg",
            "id": "e9bvoca4a6g67pmhpafm",
            "labels": {},
            "name": "ya-network",
            "network_id": "enp3jtcv93bce8tr5erb",
            "route_table_id": "",
            "timeouts": null,
            "v4_cidr_blocks": [
              "192.168.10.0/24"
            ],
            "v6_cidr_blocks": [],
            "zone": "ru-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwLCJ1cGRhdGUiOjE4MDAwMDAwMDAwMH19",
          "dependencies": [
            "yandex_vpc_network.default"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
